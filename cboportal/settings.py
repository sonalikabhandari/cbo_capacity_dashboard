"""
Django settings for cboportal project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
from datetime import timedelta
import os
import sys

# Casting datetimes to timedelta ranges will remove timezone info, ignore warnings
if not sys.warnoptions:
    import warnings
    warnings.simplefilter("ignore")



# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'YouReallyShouldHaveThisSet!!!')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG') is None

ALLOWED_HOSTS = [host for host in os.environ.get('ALLOWED_HOSTS', '*').split()]
CSRF_TRUSTED_ORIGINS = [host for host in os.environ.get('CSRF_TRUSTED_ORIGINS', '').split()]

DATA_UPLOAD_MAX_NUMBER_FIELDS = None
DATA_UPLOAD_MAX_MEMORY_SIZE = None


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_results',
    'django_celery_beat',
    'rest_framework',
    'rest_framework_jwt',
    'rest_framework.authtoken',
    'rest_framework_tracking',
    'webpack_loader',
    'users',
    'api',
    'reports',
]

AUTH_USER_MODEL = 'users.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'users.middleware.JWTAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'cboportal.urls'

TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
FRONTEND_DIR = os.path.join(BASE_DIR, 'frontend')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR, ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cboportal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': os.environ.get('database', 'cboportal'),
#         'USER': os.environ.get('username', 'cboportal'),
#         'PASSWORD': os.environ.get('password', 'cboportal'),
#         'HOST': os.environ.get('host', 'localhost'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'danielson',
        'USER': 'p2818726',
        'PASSWORD': 'p2818726',
        'HOST': '98.7.187.4',
        'PORT': '3306',
    }
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} - {asctime} - {module} - {funcName} - {lineno} - {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.environ.get('DEBUG_LOG', '%s/debug.log' % BASE_DIR),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

if not DEBUG and os.environ.get('AUTH_LDAP_SERVER_URI') is not None:
    import ldap
    from django_auth_ldap.config import LDAPSearch

    AUTHENTICATION_BACKENDS = [
        'django.contrib.auth.backends.ModelBackend',
        'django_auth_ldap.backend.LDAPBackend',
    ]

    AUTH_LDAP_SERVER_URI = os.environ.get('AUTH_LDAP_SERVER_URI')
    AUTH_LDAP_BIND_DN = os.environ.get('AUTH_LDAP_BIND_DN')
    AUTH_LDAP_BIND_PASSWORD = os.environ.get('AUTH_LDAP_BIND_PASSWORD')

    AUTH_LDAP_USER_SEARCH = LDAPSearch(
        'ou=users,ou=authentication,ou=security,dc=corp,dc=chartercom,dc=com',
        ldap.SCOPE_SUBTREE,
        '(uid=%(user)s)'
    )
    AUTH_LDAP_USER_ATTR_MAP = {
        "first_name": "givenName",
        "last_name": "sn",
        "email": "mail",
        "department": "department",
        "telephone": "telephoneNumber",
        "title": "title",
    }

    # add AUTH_LDAP_DEBUG to the .env to enable logging for ldap.
    if os.environ.get('AUTH_LDAP_DEBUG') is not None:
        import logging
        from logging import handlers
        LOGFILE = "./django-ldap-debug.log"
        MY_LOGGER = logging.getLogger('django_auth_ldap')
        MY_LOGGER.setLevel(logging.DEBUG)
        HANDLER = handlers.RotatingFileHandler(
            LOGFILE, maxBytes=1024 * 500, backupCount=5
        )
        MY_LOGGER.addHandler(HANDLER)

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}

JWT_AUTH = {
    'JWT_ALLOW_REFRESH': True,
    'JWT_EXPIRATION_DELTA': timedelta(hours=2),
    'JWT_REFRESH_EXPIRATION_DELTA': timedelta(hours=8),
    'JWT_SECRET_KEY': SECRET_KEY,
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'users.middleware.jwt_response_payload_handler'
}

# Kill session once the browser is closed
#SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Only send session over https
SESSION_COOKIE_SECURE = not DEBUG #True

# 12 hour sessions
SESSION_COOKIE_AGE = 60 * 60 * 12

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Denver'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
    os.path.join(FRONTEND_DIR, 'dist')
)

STATIC_ROOT = os.path.join(BASE_DIR, 'public')

WEBPACK_LOADER = {
    'DEFAULT': {
        'CACHE': not DEBUG,
        'BUNDLE_DIR_NAME': '/bundles/',  # must end with slash
        'STATS_FILE': os.path.join(FRONTEND_DIR, 'webpack-stats.json'),
    },
}

STORE_FILES = os.environ.get(
    'STORE_FILES',
    os.path.join(BASE_DIR, 'created')
)

CELERY_BROKER_URL = os.environ.get('BROKER', 'redis://127.0.0.1:8100/10')
CELERY_BROKER_HEARTBEAT = 0
CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_TIME_LIMIT = 60 * 45

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.environ.get('CACHE', 'redis://127.0.0.1:8100/9'),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

CACHE_MIDDLEWARE_SECONDS = 60 * 15 # Good for 15 minutes
CACHE_MIDDLEWARE_KEY_PREFIX = 'portal_cache'

REMEDY_CONN = os.environ.get('REMEDY_CONN') # must be set for remedy integration to function.

JIRA_USER = os.environ.get('JIRA_USER', 'ICantWorkWithoutThis')
JIRA_PASS = os.environ.get('JIRA_PASS', 'ICantWorkWithoutThis')
JIRA_URL = os.environ.get('JIRA_URL', 'https://jiratest.corp.chartercom.com')

EMAIL_BACKEND = os.environ.get('EMAIL_BACKEND', 'django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = 'mail.chartercom.com'

MY_URL = os.environ.get('MY_URL', 'localhost:8000')
